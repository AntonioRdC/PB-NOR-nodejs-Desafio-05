{
  "openapi": "3.0.3",
  "info": {
    "title": "Compass Mart - OpenAPI 3.0",
    "description": "Compasso entered a new branch of the market, CompassMart which is a department store, where its focus is on food marketing.",
    "contact": {
      "name": "Ant√¥nio Ribeiro de Carvalho",
      "email": "antonioribeiroamg@gmail.com",
      "url": "https://github.com/AntonioRdC"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Product"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "paths": {
    "/product": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Creat Product",
        "description": "Creat one product and return the product with id, createdAt, updatedAt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validate Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error Server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Products",
        "description": "This route return all products or filtering by brand and department",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "department",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returned products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponsePagi"
                }
              }
            }
          },
          "400": {
            "description": "Validate Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error Server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by id",
        "description": "Return one product by id",
        "responses": {
          "200": {
            "description": "Returned product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error Server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update all attributes of a product",
        "description": "Update all attributes of a product, where all attributes are required",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error Server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "summary": "Updates any product attribute",
        "description": "Updates any product attribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error Server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Remove one product",
        "description": "Remove one product by id",
        "responses": {
          "204": {
            "description": "Deleted product"
          },
          "400": {
            "description": "Id not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error Server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/product/csv": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create product with Csv",
        "description": "Created multiples products with csv send along the route",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created product(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validate Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error Server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/product/low_stock": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get products with stock low",
        "description": "Get all products with stock low < 100",
        "responses": {
          "200": {
            "description": "Return products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productResponsePagi"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error Server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "productRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Azites, √ìleos e Vinagres"
          },
          "description": {
            "type": "string",
            "example": "√ìleo de Soja Soya Garrafa 900ml"
          },
          "department": {
            "type": "string",
            "example": "Congelados"
          },
          "bar_codes": {
            "type": "string",
            "example": 7891437941641
          },
          "brand": {
            "type": "string",
            "example": "Soya"
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 12.45
          },
          "qtd_stock": {
            "type": "integer",
            "format": "int32",
            "example": 234
          }
        }
      },
      "productResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Azites, √ìleos e Vinagres"
          },
          "description": {
            "type": "string",
            "example": "√ìleo de Soja Soya Garrafa 900ml"
          },
          "department": {
            "type": "string",
            "example": "Congelados"
          },
          "bar_codes": {
            "type": "string",
            "example": 7891437941641
          },
          "brand": {
            "type": "string",
            "example": "Soya"
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 12.45
          },
          "qtd_stock": {
            "type": "integer",
            "format": "int32",
            "example": 234
          },
          "stock_control_enabled": {
            "type": "string",
            "example": true
          },
          "_id": {
            "type": "string",
            "example": "6316771b0e2917016a3582dc"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-05T22:24:27.111Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-05T22:24:27.111Z"
          },
          "__v": {
            "type": "number",
            "example": 0
          }
        }
      },
      "productResponsePagi": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "error": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "details": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}